// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way16(in=in, sel=address[0..2], a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7);
    DMux8Way(in=load, sel=address[0..2], a=loadRam0, b=loadRam1, c=loadRam2, d=loadRam3, e=loadRam4, f=loadRam5, g=loadRam6, h=loadRam7);
    RAM512(in=ram0, load=loadRam0, address=address[3..11], out=outRam0);
    RAM512(in=ram1, load=loadRam1, address=address[3..11], out=outRam1);
    RAM512(in=ram2, load=loadRam2, address=address[3..11], out=outRam2);
    RAM512(in=ram3, load=loadRam3, address=address[3..11], out=outRam3);
    RAM512(in=ram4, load=loadRam4, address=address[3..11], out=outRam4);
    RAM512(in=ram5, load=loadRam5, address=address[3..11], out=outRam5);
    RAM512(in=ram6, load=loadRam6, address=address[3..11], out=outRam6);
    RAM512(in=ram7, load=loadRam7, address=address[3..11], out=outRam7);
    Mux8Way16(a=outRam0, b=outRam1, c=outRam2, d=outRam3, e=outRam4, f=outRam5, g=outRam6, h=outRam7, sel=address[0..2], out=out);
}
